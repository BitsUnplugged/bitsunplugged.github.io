[
  {
    "usecase": {
      "name": "Problem Publication",
      "scenario": "Setter publishes a problem and Admin approves or rejects",
      "actors": "Setter, Admin",
      "preconditions": "Student is enrolled in the university and has an advisor",
      "steps": [
        "Setter designs a problem and saves it",
        "Setter submits the problem for approval",
        "Admin approves or rejects the problem"
      ]
    },
    "testcases": [
      {
        "name": "Valid Problem Submission",
        "description": "Verify that a setter can successfully design and submit a problem for approval.",
        "input": {
          "problemId": 1
        },
        "expected": {
          "outcome": "Problem submitted for approval",
          "status": "Approved"
        }
      },
      {
        "name": "Empty Canvas Submission",
        "description": "Verify that the system handles the case where a setter tries to submit a problem without any canvas.",
        "input": {
          "problemId": 1
        },
        "expected": {
          "outcome": "Registration failed",
          "status": "Rejected"
        }
      },
      {
        "name": "Admin Approval",
        "description": "Verify that the admin can successfully approve a problem.",
        "input": {
          "adminApproval": true
        },
        "expected": {
          "outcome": "Problem approved",
          "status": "Approved"
        }
      },
      {
        "name": "Admin Rejection",
        "description": "Verify that the admin can reject a problem.",
        "input": {
          "adminApproval": false
        },
        "expected": {
          "outcome": "Problem rejected",
          "status": "Rejected"
        }
      }
    ]
  },
  {
    "usecase": {
      "name": "Problem Setter Registration",
      "scenario": "A user intends to become a problem setter and registers for the role. Admin reviews and approves/rejects the registration.",
      "actors": "User, Admin",
      "preconditions": "",
      "steps": [
        "User expresses the intention to become a problem setter",
        "User submits the registration request",
        "Admin reviews the registration request and makes a decision (approve/reject)"
      ]
    },
    "testcases": [
      {
        "name": "Valid Registration Request",
        "description": "Verify that a user can successfully submit a valid registration request to become a problem setter.",
        "input": {
          "name": "Mahir Labib Dihan",
          "email": "mahirlabibdihan@gmail.com"
        },
        "expected": {
          "outcome": "Registration request submitted for approval",
          "status": "Pending Approval"
        }
      },
      {
        "name": "Empty Registration Details",
        "description": "Verify that the system handles the case where a user tries to submit an empty registration request.",
        "input": {},
        "expected": {
          "outcome": "Registration request failed",
          "status": "Rejected"
        }
      },
      {
        "name": "Administrator Approval",
        "description": "Verify that the administrator can successfully approve a submitted problem setter registration request.",
        "input": {
          "administratorDecision": "Approve"
        },
        "expected": {
          "outcome": "Registration approved",
          "status": "Approved"
        }
      },
      {
        "name": "Administrator Rejection",
        "description": "Verify that the administrator can reject a submitted problem setter registration request.",
        "input": {
          "administratorDecision": "Reject"
        },
        "expected": {
          "outcome": "Registration rejected",
          "status": "Rejected"
        }
      }
    ]
  },
  {
    "usecase": {
      "name": "Problem Submission",
      "scenario": "A registered user intends to solve a problem available on the platform. The user successfully solves the problem, and the system records the solution.",
      "actors": "User",
      "preconditions": "User is registered and logged into the system",
      "steps": [
        "User navigates to the list of available problems",
        "User selects a specific problem to solve",
        "User provides a solution to the problem",
        "User submits the solution",
        "System checks the solution, gives verdict and updates the user's solving history"
      ]
    },
    "testcases": [
      {
        "name": "Valid Problem Solution",
        "description": "Verify that a user can successfully solve a problem and submit a valid solution.",
        "input": {
          "selectedProblem": "Problem123",
          "solutionDetails": "A detailed and correct solution to the problem."
        },
        "expected": {
          "outcome": "Solution submitted successfully",
          "status": "Recorded"
        }
      },
      {
        "name": "Empty Solution",
        "description": "Verify that the system handles the case where a user tries to submit an empty solution.",
        "input": {
          "selectedProblem": "Problem456",
          "solutionDetails": ""
        },
        "expected": {
          "outcome": "Solution submission failed",
          "status": "Not Recorded"
        }
      },
      {
        "name": "Incorrect Problem Selection",
        "description": "Verify that the system handles the case where a user tries to solve a problem that is not available or does not exist.",
        "input": {
          "selectedProblem": "NonExistentProblem",
          "solutionDetails": "Some solution details"
        },
        "expected": {
          "outcome": "Solution submission failed",
          "status": "Not Recorded"
        }
      }
    ]
  },
  {
    "usecase": {
      "name": "Contest Registration",
      "scenario": "A user wants to participate in a programming contest. The user registers for the contest, and the system processes the registration.",
      "actors": "User, Contest Organizer",
      "preconditions": "User is registered in the system",
      "steps": [
        "User navigates to the list of available contests",
        "User selects a specific contest to participate in",
        "User submits the registration for the contest",
        "Contest Organizer reviews and approves the registration"
      ]
    },
    "testcases": [
      {
        "name": "Valid Contest Registration",
        "description": "Verify that a user can successfully register for a programming contest.",
        "input": {
          "selectedContest": "CodeChallenge2024",
          "registrationDetails": "Valid details including user credentials and relevant information."
        },
        "expected": {
          "outcome": "Contest registration submitted for approval",
          "status": "Pending Approval"
        }
      },
      {
        "name": "Empty Registration Details",
        "description": "Verify that the system handles the case where a user tries to submit an empty contest registration.",
        "input": {
          "selectedContest": "AlgorithmMasters",
          "registrationDetails": ""
        },
        "expected": {
          "outcome": "Contest registration failed",
          "status": "Rejected"
        }
      },
      {
        "name": "Contest Organizer Approval",
        "description": "Verify that the contest organizer can successfully approve a submitted contest registration.",
        "input": {
          "contestOrganizerDecision": "Approve"
        },
        "expected": {
          "outcome": "Contest registration approved",
          "status": "Approved"
        }
      },
      {
        "name": "Contest Organizer Rejection",
        "description": "Verify that the contest organizer can reject a submitted contest registration.",
        "input": {
          "contestOrganizerDecision": "Reject"
        },
        "expected": {
          "outcome": "Contest registration rejected",
          "status": "Rejected"
        }
      }
    ]
  },
  {
    "usecase": {
      "name": "Contest Submission for Approval",
      "scenario": "A contest organizer wants to submit a complete contest for approval. The organizer arranges the contest, including multiple problems, and submits it for approval. An administrator reviews and approves/rejects the submitted contest.",
      "actors": "Problem Setter, Admin",
      "preconditions": "Contest Organizer is registered as a problem setter",
      "steps": [
        "Contest Organizer creates a new contest with multiple problems",
        "Contest Organizer submits the complete contest for approval",
        "Administrator reviews and approves/rejects the submitted contest"
      ]
    },
    "testcases": [
      {
        "name": "Valid Contest Submission",
        "description": "Verify that a contest organizer can successfully create and submit a valid contest with multiple problems for approval.",
        "input": {
          "contestDetails": "A well-defined contest with multiple problems, input/output specifications, and sample test cases."
        },
        "expected": {
          "outcome": "Contest submitted for approval",
          "status": "Pending Approval"
        }
      },
      {
        "name": "Empty Contest Details",
        "description": "Verify that the system handles the case where a contest organizer tries to submit a contest with empty details.",
        "input": {
          "contestDetails": ""
        },
        "expected": {
          "outcome": "Contest submission failed",
          "status": "Rejected"
        }
      },
      {
        "name": "Administrator Approval",
        "description": "Verify that the administrator can successfully approve a submitted contest.",
        "input": {
          "administratorDecision": "Approve"
        },
        "expected": {
          "outcome": "Contest approved",
          "status": "Approved"
        }
      },
      {
        "name": "Administrator Rejection",
        "description": "Verify that the administrator can reject a submitted contest.",
        "input": {
          "administratorDecision": "Reject"
        },
        "expected": {
          "outcome": "Contest rejected",
          "status": "Rejected"
        }
      }
    ]
  }
]
